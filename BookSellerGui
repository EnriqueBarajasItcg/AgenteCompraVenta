package agents;

import java.util.Hashtable;

import behaviours.OfferRequestServer;
import behaviours.PurchaseOrderServer;
import gui.BookSellerGui;

import jade.core.Agent;
import jade.core.behaviours.*;
import jade.domain.DFService;
import jade.domain.FIPAException;
import jade.domain.FIPAAgentManagement.DFAgentDescription;
import jade.domain.FIPAAgentManagement.ServiceDescription;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class BookSellerGui extends JFrame {
    private BookSellerAgent myAgent;

    private JTextField titleField, priceField;
    private JButton addButton, confirmButton; // Nuevo botón de confirmación
    private JLabel infoLabel; // Etiqueta de confirmación

    public BookSellerGui(BookSellerAgent a) {
        super(a.getLocalName());
        myAgent = a;

        JPanel p = new JPanel();
        p.setLayout(new GridLayout(3, 2));
        p.add(new JLabel("Titulo de libro:"));
        titleField = new JTextField(15);
        p.add(titleField);
        p.add(new JLabel("Precio:"));
        priceField = new JTextField(15);
        p.add(priceField);
        addButton = new JButton("Añadir");
        p.add(addButton);
        
        //Botón de confirmación y etiqueta de confirmación
        confirmButton = new JButton("Confirmar venta");
        infoLabel = new JLabel("");
        p.add(confirmButton);
        p.add(infoLabel);

        getContentPane().add(p, BorderLayout.CENTER);

        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ev) {
                try {
                    String title = titleField.getText().trim();
                    String price = priceField.getText().trim();
                    myAgent.updateCatalogue(title, Integer.parseInt(price));
                    titleField.setText("");
                    priceField.setText("");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(BookSellerGui.this, "Invalid values. " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        
        //Evento del botón de confirmación
        confirmButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ev) {
                //Confirmación de la venta con un mensaje
                infoLabel.setText("Venta Confirmada");
            }
        });

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                myAgent.doDelete();
            }
        });

        setResizable(false);
    }

    public void showGui() {
        pack();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int centerX = (int) screenSize.getWidth() / 2;
        int centerY = (int) screenSize.getHeight() / 2;
        setLocation(centerX - getWidth() / 2, centerY - getHeight() / 2);
        super.setVisible(true);
    }
}
